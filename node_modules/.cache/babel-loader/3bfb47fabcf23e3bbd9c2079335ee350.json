{"ast":null,"code":"var _jsxFileName = \"/Users/sharonyvette/classreview/src/App.js\";\n// src/App.js\nimport React from \"react\";\nimport API from \"./utils/API.js\";\nimport User from \"./component/User\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: true,\n      name: null,\n      avatar: null,\n      email: null,\n      phone: null,\n      gender: null,\n      empData: []\n    };\n  }\n\n  render() {\n    const {\n      isLoading,\n      name,\n      avatar,\n      email,\n      phone,\n      gender,\n      empDat\n    } = this.state;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, \"const \", (isLoading, name, avatar, email, phone, gender), \" = this.state;\");\n  }\n\n  async componentDidMount() {\n    // Load async data.\n    let userData = await API.get('/', {\n      params: {\n        results: 10,\n        inc: 'name,email,picture,phone,gender'\n      }\n    }); // Parse the results for ease of use.\n\n    userData = userData.data.results[0]; // Update state with new data and re-render our component.\n\n    const name = `${userData.name.first} ${userData.name.last}`;\n    const avatar = userData.picture.large;\n    const email = userData.email;\n    const phone = userData.phone;\n    const gender = userData.gender;\n    this.setState({ ...this.state,\n      ...{\n        isLoading: false,\n        name,\n        avatar,\n        email,\n        phone,\n        gender,\n        empData: userData\n      }\n    });\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/sharonyvette/classreview/src/App.js"],"names":["React","API","User","App","Component","constructor","props","state","isLoading","name","avatar","email","phone","gender","empData","render","empDat","componentDidMount","userData","get","params","results","inc","data","first","last","picture","large","setState"],"mappings":";AAAA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,GAAP,MAAgB,gBAAhB;AACA,OAAOC,IAAP,MAAiB,kBAAjB;;AAEA,MAAMC,GAAN,SAAkBH,KAAK,CAACI,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,SAAS,EAAE,IADA;AAEXC,MAAAA,IAAI,EAAE,IAFK;AAGXC,MAAAA,MAAM,EAAE,IAHG;AAIXC,MAAAA,KAAK,EAAE,IAJI;AAKXC,MAAAA,KAAK,EAAE,IALI;AAMXC,MAAAA,MAAM,EAAE,IANG;AAOXC,MAAAA,OAAO,EAAE;AAPE,KAAb;AASD;;AAEDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEP,MAAAA,SAAF;AAAaC,MAAAA,IAAb;AAAmBC,MAAAA,MAAnB;AAA2BC,MAAAA,KAA3B;AAAkCC,MAAAA,KAAlC;AAAyCC,MAAAA,MAAzC;AAAiDG,MAAAA;AAAjD,QAA4D,KAAKT,KAAvE;AAEA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACMC,SAAS,EAAEC,IAAF,EAAQC,MAAR,EAAgBC,KAAhB,EAAuBC,KAAvB,EAA8BC,MAD7C,oBADF;AAaD;;AAGC,QAAMI,iBAAN,GAA0B;AACxB;AACA,QAAIC,QAAQ,GAAG,MAAMjB,GAAG,CAACkB,GAAJ,CAAQ,GAAR,EAAa;AAChCC,MAAAA,MAAM,EAAE;AACNC,QAAAA,OAAO,EAAE,EADH;AAENC,QAAAA,GAAG,EAAE;AAFC;AADwB,KAAb,CAArB,CAFwB,CASpB;;AACJJ,IAAAA,QAAQ,GAAGA,QAAQ,CAACK,IAAT,CAAcF,OAAd,CAAsB,CAAtB,CAAX,CAVwB,CAYxB;;AACA,UAAMZ,IAAI,GAAI,GAAES,QAAQ,CAACT,IAAT,CAAce,KAAM,IAAGN,QAAQ,CAACT,IAAT,CAAcgB,IAAK,EAA1D;AACA,UAAMf,MAAM,GAAGQ,QAAQ,CAACQ,OAAT,CAAiBC,KAAhC;AACA,UAAMhB,KAAK,GAAGO,QAAQ,CAACP,KAAvB;AACA,UAAMC,KAAK,GAAGM,QAAQ,CAACN,KAAvB;AACA,UAAMC,MAAM,GAAGK,QAAQ,CAACL,MAAxB;AAEA,SAAKe,QAAL,CAAc,EACZ,GAAG,KAAKrB,KADI;AACG,SAAG;AAChBC,QAAAA,SAAS,EAAE,KADK;AAEhBC,QAAAA,IAFgB;AAGhBC,QAAAA,MAHgB;AAIhBC,QAAAA,KAJgB;AAKhBC,QAAAA,KALgB;AAMhBC,QAAAA,MANgB;AAOhBC,QAAAA,OAAO,EAAEI;AAPO;AADN,KAAd;AAWD;;AAhE6B;;AAkEhC,eAAef,GAAf","sourcesContent":["// src/App.js\n\nimport React from \"react\";\n\nimport API from \"./utils/API.js\";\nimport User from \"./component/User\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isLoading: true,\n      name: null,\n      avatar: null,\n      email: null,\n      phone: null,\n      gender: null,\n      empData: []\n    };\n  }\n\n  render() {\n    const { isLoading, name, avatar, email, phone, gender, empDat } = this.state;\n\n    return (\n      <div>\n    const { isLoading, name, avatar, email, phone, gender } = this.state;\n\n\n      {/* <User isLoading={isLoading} \n      name={name} \n      avatar={avatar} \n      email={email} \n      phone={phone}\n      gender={gender}/> */}\n      </div>\n    );\n  }\n\n\n    async componentDidMount() {\n      // Load async data.\n      let userData = await API.get('/', {\n        params: {\n          results: 10,\n          inc: 'name,email,picture,phone,gender'\n        }\n      });\n\n          // Parse the results for ease of use.\n      userData = userData.data.results[0];\n\n      // Update state with new data and re-render our component.\n      const name = `${userData.name.first} ${userData.name.last}`;\n      const avatar = userData.picture.large;\n      const email = userData.email;\n      const phone = userData.phone;\n      const gender = userData.gender;\n\n      this.setState({\n        ...this.state, ...{\n          isLoading: false,\n          name,\n          avatar,\n          email,\n          phone,\n          gender,\n          empData: userData\n        }\n      });\n    }\n  }\n  export default App;\n\n\n"]},"metadata":{},"sourceType":"module"}