{"ast":null,"code":"var _jsxFileName = \"/Users/sharonyvette/classreview/src/component/User.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"shards-ui/dist/css/shards.min.css\";\nimport ReactDataGrid from \"react-data-grid\"; // import { Card } from \"shards-react\"\n\nimport { Row, Container } from \"react-bootstrap\";\nconst columns = [{\n  key: 'id',\n  name: 'ID'\n}, {\n  key: 'title',\n  name: 'Title'\n}, {\n  key: 'count',\n  name: 'Count'\n}];\nconst rows = [{\n  id: 0,\n  title: 'row1',\n  count: 20\n}, {\n  id: 1,\n  title: 'row1',\n  count: 40\n}, {\n  id: 2,\n  title: 'row1',\n  count: 60\n}];\n\nfunction HelloWorld() {\n  return React.createElement(ReactDataGrid, {\n    columns: columns,\n    rowGetter: i => rows[i],\n    rowsCount: 3,\n    minHeight: 150,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  });\n}\n\nclass User extends React.Component {\n  render() {\n    const {\n      name,\n      avatar,\n      email,\n      phone,\n      gender,\n      isLoading\n    } = this.props;\n    const userDetails = React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      // className=\"img-thumbnail rounded-circle mx-auto mb-2 shadow-sm\"\n      src: avatar,\n      alt: name,\n      style: {\n        width: \"100px\",\n        height: \"100px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }), React.createElement(\"h4\", {\n      className: \"mb-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, name), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, gender), React.createElement(\"span\", {\n      className: \"mb-0>\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, phone), React.createElement(\"span\", {\n      className: \"text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, email)));\n    const loadingMessage = React.createElement(\"span\", {\n      className: \"d-flex m-auto\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"Loading...\");\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, isLoading ? loadingMessage : userDetails);\n  }\n\n}\n\nUser.propTypes = {\n  name: PropTypes.string,\n  avatar: PropTypes.string,\n  email: PropTypes.string,\n  phone: PropTypes.string,\n  gender: PropTypes.string,\n  isLoading: PropTypes.bool\n};\nexport default User;","map":{"version":3,"sources":["/Users/sharonyvette/classreview/src/component/User.js"],"names":["React","PropTypes","ReactDataGrid","Row","Container","columns","key","name","rows","id","title","count","HelloWorld","i","User","Component","render","avatar","email","phone","gender","isLoading","props","userDetails","width","height","loadingMessage","propTypes","string","bool"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAO,sCAAP;AACA,OAAO,mCAAP;AACA,OAAOC,aAAP,MAA0B,iBAA1B,C,CAEA;;AACA,SAASC,GAAT,EAAcC,SAAd,QAA+B,iBAA/B;AAEA,MAAMC,OAAO,GAAG,CACd;AAAEC,EAAAA,GAAG,EAAE,IAAP;AAAaC,EAAAA,IAAI,EAAE;AAAnB,CADc,EAEd;AAAED,EAAAA,GAAG,EAAE,OAAP;AAAgBC,EAAAA,IAAI,EAAE;AAAtB,CAFc,EAGd;AAAED,EAAAA,GAAG,EAAE,OAAP;AAAgBC,EAAAA,IAAI,EAAE;AAAtB,CAHc,CAAhB;AAKA,MAAMC,IAAI,GAAG,CAAC;AAACC,EAAAA,EAAE,EAAE,CAAL;AAAQC,EAAAA,KAAK,EAAE,MAAf;AAAuBC,EAAAA,KAAK,EAAE;AAA9B,CAAD,EAAoC;AAACF,EAAAA,EAAE,EAAE,CAAL;AAAQC,EAAAA,KAAK,EAAE,MAAf;AAAuBC,EAAAA,KAAK,EAAE;AAA9B,CAApC,EAAuE;AAACF,EAAAA,EAAE,EAAE,CAAL;AAAQC,EAAAA,KAAK,EAAE,MAAf;AAAuBC,EAAAA,KAAK,EAAE;AAA9B,CAAvE,CAAb;;AAEA,SAASC,UAAT,GAAsB;AACpB,SAAQ,oBAAC,aAAD;AACR,IAAA,OAAO,EAAEP,OADD;AAER,IAAA,SAAS,EAAEQ,CAAC,IAAIL,IAAI,CAACK,CAAD,CAFZ;AAGR,IAAA,SAAS,EAAE,CAHH;AAIR,IAAA,SAAS,EAAE,GAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAR;AAKD;;AAMD,MAAMC,IAAN,SAAmBd,KAAK,CAACe,SAAzB,CAAmC;AACjCC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAET,MAAAA,IAAF;AAAQU,MAAAA,MAAR;AAAgBC,MAAAA,KAAhB;AAAuBC,MAAAA,KAAvB;AAA8BC,MAAAA,MAA9B;AAAsCC,MAAAA;AAAtC,QAAoD,KAAKC,KAA/D;AAEA,UAAMC,WAAW,GACf,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEA;AACE;AACA,MAAA,GAAG,EAAEN,MAFP;AAGE,MAAA,GAAG,EAAEV,IAHP;AAIE,MAAA,KAAK,EAAE;AAAEiB,QAAAA,KAAK,EAAE,OAAT;AAAkBC,QAAAA,MAAM,EAAE;AAA1B,OAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA,EAQA;AAAI,MAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAsBlB,IAAtB,CARA,EASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKa,MAAL,CATA,EAUA;AAAM,MAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAyBD,KAAzB,CAVA,EAWA;AAAM,MAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA8BD,KAA9B,CAXA,CADF,CADF;AAmBA,UAAMQ,cAAc,GAAG;AAAM,MAAA,SAAS,EAAC,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAvB;AAEA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIGL,SAAS,GAAGK,cAAH,GAAoBH,WAJhC,CADF;AAQD;;AAjCgC;;AAoCnCT,IAAI,CAACa,SAAL,GAAiB;AACfpB,EAAAA,IAAI,EAAEN,SAAS,CAAC2B,MADD;AAEfX,EAAAA,MAAM,EAAEhB,SAAS,CAAC2B,MAFH;AAGfV,EAAAA,KAAK,EAAEjB,SAAS,CAAC2B,MAHF;AAIfT,EAAAA,KAAK,EAAElB,SAAS,CAAC2B,MAJF;AAKfR,EAAAA,MAAM,EAAEnB,SAAS,CAAC2B,MALH;AAMfP,EAAAA,SAAS,EAAEpB,SAAS,CAAC4B;AANN,CAAjB;AASA,eAAef,IAAf","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"shards-ui/dist/css/shards.min.css\";\nimport ReactDataGrid from \"react-data-grid\";\n\n// import { Card } from \"shards-react\"\nimport { Row, Container } from \"react-bootstrap\"\n\nconst columns = [\n  { key: 'id', name: 'ID' },\n  { key: 'title', name: 'Title' },\n  { key: 'count', name: 'Count' } ];\n\nconst rows = [{id: 0, title: 'row1', count: 20}, {id: 1, title: 'row1', count: 40}, {id: 2, title: 'row1', count: 60}];\n\nfunction HelloWorld() {\n  return (<ReactDataGrid\n  columns={columns}\n  rowGetter={i => rows[i]}\n  rowsCount={3}\n  minHeight={150} />);\n}\n\n\n\n\n\nclass User extends React.Component {\n  render() {\n    const { name, avatar, email, phone, gender, isLoading } = this.props;\n\n    const userDetails = (\n      <Container>\n        <Row>\n      \n        <img\n          // className=\"img-thumbnail rounded-circle mx-auto mb-2 shadow-sm\"\n          src={avatar}\n          alt={name}\n          style={{ width: \"100px\", height: \"100px\" }}\n        />\n        <h4 className=\"mb-0\">{name}</h4>\n        <h3>{gender}</h3>\n        <span className=\"mb-0>\">{phone}</span>\n        <span className=\"text-muted\">{email}</span>\n        </Row>\n        </Container>\n\n    );\n\n    const loadingMessage = <span className=\"d-flex m-auto\">Loading...</span>;\n\n    return (\n      <div\n        // className=\"mx-auto mt-4 text-center p-5\"\n        // style={{ maxWidth: \"300px\", minHeight: \"250px\" }}\n      >\n        {isLoading ? loadingMessage : userDetails}\n      </div>\n    );\n  }\n}\n\nUser.propTypes = {\n  name: PropTypes.string,\n  avatar: PropTypes.string,\n  email: PropTypes.string,\n  phone: PropTypes.string,\n  gender: PropTypes.string,\n  isLoading: PropTypes.bool\n};\n\nexport default User;\n"]},"metadata":{},"sourceType":"module"}